plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13

def jetty = "11.0.2"

dependencies {
    implementation("ch.qos.logback:logback-classic")
    implementation("com.google.code.gson:gson:2.8.6")
    implementation("org.hibernate:hibernate-core")
    implementation("org.postgresql:postgresql")

    implementation("org.eclipse.jetty:jetty-servlet:${jetty}")
    implementation("org.eclipse.jetty:jetty-server:${jetty}")
    implementation("org.eclipse.jetty:jetty-webapp:${jetty}")
    implementation("org.eclipse.jetty:jetty-security:${jetty}")
    implementation("org.eclipse.jetty:jetty-http:${jetty}")
    implementation("org.eclipse.jetty:jetty-io:${jetty}")
    implementation("org.eclipse.jetty:jetty-util:${jetty}")
    implementation("org.freemarker:freemarker:2.3.31")

    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.mockito:mockito-junit-jupiter")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}